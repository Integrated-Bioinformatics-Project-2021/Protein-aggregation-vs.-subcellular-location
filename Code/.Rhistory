result = ""
for (j in 1:length(locations_vector$subcellular_location))
{
if (locations_vector$subcellular_location[j] %in% secretory)
{
result = paste(result, "a", sep = "")
}
else if(locations_vector$subcellular_location[j] %in% non_secretory)
{
result = paste(result, "b", sep = "")
}
}
if (grepl("a", result, fixed = TRUE) & grepl("b", result, fixed = TRUE))
{
locations_short["Secretory"] = "3"
}
else if (grepl("a", result, fixed = TRUE))
{
locations_short["Secretory"] = "1"
}
else if (grepl("b", result, fixed = TRUE))
{
locations_short["Secretory"] = "2"
}
else
{
locations_short["Secretory"] = "3"
}
}
nrow(locations_short)
for (i in 1:nrow(locations_short))
{
locations_str <- sapply(locations_short[i,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
result = ""
for (j in 1:length(locations_vector$subcellular_location))
{
if (locations_vector$subcellular_location[j] %in% secretory)
{
result = paste(result, "a", sep = "")
}
else if(locations_vector$subcellular_location[j] %in% non_secretory)
{
result = paste(result, "b", sep = "")
}
else
{
}
}
if (grepl("a", result, fixed = TRUE) & grepl("b", result, fixed = TRUE))
{
locations_short["Secretory"] = "3"
}
else if (grepl("a", result, fixed = TRUE))
{
locations_short["Secretory"] = "1"
}
else if (grepl("b", result, fixed = TRUE))
{
locations_short["Secretory"] = "2"
}
else
{
locations_short["Secretory"] = "3"
}
}
locations_str <- sapply(locations_short[4,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
locations_str <- sapply(locations_short[5,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
length(locations_vector$subcellular_location)
for (i in 1:nrow(locations_short))
{
locations_str <- sapply(locations_short[i,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
result = ""
for (j in 1:length(locations_vector$subcellular_location))
{
if(length(locations_vector$subcellular_location) != 0)
{
if (locations_vector$subcellular_location[j] %in% secretory)
{
result = paste(result, "a", sep = "")
}
else if(locations_vector$subcellular_location[j] %in% non_secretory)
{
result = paste(result, "b", sep = "")
}
}
}
if (grepl("a", result, fixed = TRUE) & grepl("b", result, fixed = TRUE))
{
locations_short["Secretory"] = "3"
}
else if (grepl("a", result, fixed = TRUE))
{
locations_short["Secretory"] = "1"
}
else if (grepl("b", result, fixed = TRUE))
{
locations_short["Secretory"] = "2"
}
else
{
locations_short["Secretory"] = "3"
}
}
View(locations_short)
locations_str <- sapply(locations_short[5,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
for (j in 1:length(locations_vector$subcellular_location))
{
if(length(locations_vector$subcellular_location) != 0)
{
if (locations_vector$subcellular_location[j] %in% secretory)
{
result = paste(result, "a", sep = "")
}
else if(locations_vector$subcellular_location[j] %in% non_secretory)
{
result = paste(result, "b", sep = "")
}
}
}
locations_vector$subcellular_location
locations_str <- sapply(locations_short[5,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
length(locations_vector$subcellular_location
)
j in 1:length(locations_vector$subcellular_location
for  (j in 1:length(locations_vector$subcellular_location)
{}
for  (j in 1:length(locations_vector$subcellular_location)){}
for (i in 1:nrow(locations_short))
for (i in 1:nrow(locations_short))
for (i in 1:nrow(locations_short))
for (i in 1:nrow(locations_short))
{}
locations_short<- cbind(locations_short, Protein = row.names(subcellular_locations)) #creating a second column Protein
View(locations_vector)
secretory <- c("Cell membrane", "Endoplasmatic Reticulum", "Golgi apparatus", "Lysosomes", "Secreted region")
non_secretory <- c("Cytoplasm", "Nucleus", "Mitochondrion")
for (i in 1:nrow(locations_short))
{
locations_str <- sapply(locations_short[i,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
result = ""
if(length(locations_vector$subcellular_location) != 0)
{
for (j in 1:length(locations_vector$subcellular_location))
{
if (locations_vector$subcellular_location[j] %in% secretory)
{
result = paste(result, "a", sep = "")
}
else if(locations_vector$subcellular_location[j] %in% non_secretory)
{
result = paste(result, "b", sep = "")
}
}
}
if (grepl("a", result, fixed = TRUE) & grepl("b", result, fixed = TRUE))
{
locations_short["Secretory"] = "3"
}
else if (grepl("a", result, fixed = TRUE))
{
locations_short["Secretory"] = "1"
}
else if (grepl("b", result, fixed = TRUE))
{
locations_short["Secretory"] = "2"
}
else
{
locations_short["Secretory"] = "3"
}
}
length(locations_vector$subcellular_location)
locations_str <- sapply(locations_short[5,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
result = ""
if(length(locations_vector$subcellular_location) != 0)
{
for (j in 1:length(locations_vector$subcellular_location))
{
if (locations_vector$subcellular_location[j] %in% secretory)
{
result = paste(result, "a", sep = "")
}
else if(locations_vector$subcellular_location[j] %in% non_secretory)
{
result = paste(result, "b", sep = "")
}
}
}
if (grepl("a", result, fixed = TRUE) & grepl("b", result, fixed = TRUE))
{
locations_short["Secretory"] = "3"
}
else if (grepl("a", result, fixed = TRUE))
{
locations_short["Secretory"] = "1"
}
else if (grepl("b", result, fixed = TRUE))
{
locations_short["Secretory"] = "2"
}
else
{
locations_short["Secretory"] = "3"
}
{
locations_str <- sapply(locations_short[i,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
result = ""
if(length(locations_vector$subcellular_location) != 0)
{
for (j in 1:length(locations_vector$subcellular_location))
{
if (locations_vector$subcellular_location[j] %in% secretory)
{
result = paste(result, "a", sep = "")
}
else if(locations_vector$subcellular_location[j] %in% non_secretory)
{
result = paste(result, "b", sep = "")
}
}
}
if (grepl("a", result, fixed = TRUE) & grepl("b", result, fixed = TRUE))
{
locations_short["Secretory"] = "3"
}
else if (grepl("a", result, fixed = TRUE))
{
locations_short["Secretory"] = "1"
}
else if (grepl("b", result, fixed = TRUE))
{
locations_short["Secretory"] = "2"
}
else
{
locations_short["Secretory"] = "3"
}
}
grepl("b", result, fixed = TRUE)
grepl("a", result, fixed = TRUE)
?grepl
grepl
?grepl
for (i in 1:nrow(locations_short))
{
locations_str <- sapply(locations_short[i,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
result = ""
if(length(locations_vector$subcellular_location) != 0)
{
for (j in 1:length(locations_vector$subcellular_location))
{
if (locations_vector$subcellular_location[j] %in% secretory)
{
result = paste(result, "a", sep = "")
}
else if(locations_vector$subcellular_location[j] %in% non_secretory)
{
result = paste(result, "b", sep = "")
}
}
}
if (grepl("a", result, fixed = TRUE) & grepl("b", result, fixed = TRUE)){
locations_short["Secretory"] = "3"
}
else if (grepl("a", result, fixed = TRUE)){
locations_short["Secretory"] = "1"
}
else if (grepl("b", result, fixed = TRUE)){
locations_short["Secretory"] = "2"
}
else{
locations_short["Secretory"] = "3"
}
}
if (grepl("a", result, fixed = TRUE) & grepl("b", result, fixed = TRUE)){
locations_short["Secretory"] = "3"
}
else if (grepl("a", result, fixed = TRUE)){
locations_short["Secretory"] = "1"
}
for (i in 1:nrow(locations_short))
{
locations_str <- sapply(locations_short[i,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
result = ""
if(length(locations_vector$subcellular_location) != 0)
{
for (j in 1:length(locations_vector$subcellular_location))
{
if (locations_vector$subcellular_location[j] %in% secretory)
{
result = paste(result, "a", sep = "")
}
else if(locations_vector$subcellular_location[j] %in% non_secretory)
{
result = paste(result, "b", sep = "")
}
}
}
if (grepl("a", result, fixed = TRUE) && grepl("b", result, fixed = TRUE)){
locations_short["Secretory"] = "3"
}
else if (grepl("a", result, fixed = TRUE)){
locations_short["Secretory"] = "1"
}
else if (grepl("b", result, fixed = TRUE)){
locations_short["Secretory"] = "2"
}
else{
locations_short["Secretory"] = "3"
}
}
for (i in 1:nrow(locations_short))
{
locations_str <- sapply(locations_short[i,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
result = ""
if(length(locations_vector$subcellular_location) != 0)
{
for (j in 1:length(locations_vector$subcellular_location))
{
if (locations_vector$subcellular_location[j] %in% secretory)
{
result = paste(result, "a", sep = "")
}
else if(locations_vector$subcellular_location[j] %in% non_secretory)
{
result = paste(result, "b", sep = "")
}
}
}
if (grepl("a", result, fixed = TRUE) & grepl("b", result, fixed = TRUE)){
locations_short["Secretory"] = "3"
}
else if (grepl("a", result, fixed = TRUE)){
locations_short["Secretory"] = "1"
}
else if (grepl("b", result, fixed = TRUE)){
locations_short["Secretory"] = "2"
}
else{
locations_short["Secretory"] = "3"
}
}
locations_short<- cbind(locations_short, Protein = row.names(subcellular_locations)) #creating a second column Protein
debugSource('~/Desktop/IBP/Code/Protein-aggregation-vs.-subcellular-location/Code/getSubcellularLocation.R')
install.packages("UniprotR")
install.packages("BiocManager")
install.packages("hash")
for (i in 1:nrow(locations_short))
{
locations_str <- sapply(locations_short[i,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
result = ""
if(length(locations_vector$subcellular_location) != 0)
{
for (j in 1:length(locations_vector$subcellular_location))
{
if (locations_vector$subcellular_location[j] %in% secretory)
{
result = paste(result, "a", sep = "")
}
else if(locations_vector$subcellular_location[j] %in% non_secretory)
{
result = paste(result, "b", sep = "")
}
}
}
if (grepl("a", result, fixed = TRUE) & grepl("b", result, fixed = TRUE)){
locations_short["Secretory"] = "3"
}
else if (grepl("a", result, fixed = TRUE)){
locations_short["Secretory"] = "1"
}
else if (grepl("b", result, fixed = TRUE)){
locations_short["Secretory"] = "2"
}
else{
locations_short["Secretory"] = "3"
}
}
install.packages("BiocManager")
install.packages("hash")
install.packages("hash")
c
c
c
c
c
for (i in 1:nrow(locations_short))
{
locations_str <- sapply(locations_short[i,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
result = ""
if(length(locations_vector$subcellular_location) != 0)
{
for (j in 1:length(locations_vector$subcellular_location))
{
if (locations_vector$subcellular_location[j] %in% secretory)
{
result = paste(result, "a", sep = "")
}
else if(locations_vector$subcellular_location[j] %in% non_secretory)
{
result = paste(result, "b", sep = "")
}
}
}
if (grepl("a", result, fixed = TRUE) & grepl("b", result, fixed = TRUE)){
locations_short["Secretory"] = "3"
}
else if (grepl("a", result, fixed = TRUE)){
locations_short["Secretory"] = "1"
}
else if (grepl("b", result, fixed = TRUE)){
locations_short["Secretory"] = "2"
}
else{
locations_short["Secretory"] = "3"
}
}
for (i in 1:nrow(locations_short))
{print(i)}
locations_str <- sapply(locations_short[i,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
result = ""
if(length(locations_vector$subcellular_location) != 0)
{
for (j in 1:length(locations_vector$subcellular_location))
{
if (locations_vector$subcellular_location[j] %in% secretory)
{
result = paste(result, "a", sep = "")
}
else if(locations_vector$subcellular_location[j] %in% non_secretory)
{
result = paste(result, "b", sep = "")
}
}
}
for (i in 1:nrow(locations_short)){
locations_str <- sapply(locations_short[i,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
result = ""
if(length(locations_vector$subcellular_location) != 0)
{
for (j in 1:length(locations_vector$subcellular_location))
{
if (locations_vector$subcellular_location[j] %in% secretory)
{
result = paste(result, "a", sep = "")
}
else if(locations_vector$subcellular_location[j] %in% non_secretory)
{
result = paste(result, "b", sep = "")
}
}
}
if (grepl("a", result, fixed = TRUE) & grepl("b", result, fixed = TRUE)){
locations_short[i]["Secretory"] = "3"
}
else if (grepl("a", result, fixed = TRUE)){
locations_short["Secretory"] = "1"
}
else if (grepl("b", result, fixed = TRUE)){
locations_short["Secretory"] = "2"
}
else{
locations_short["Secretory"] = "3"
}
}
for (i in 1:nrow(locations_short)){
locations_str <- sapply(locations_short[i,]["subcellular_location"], as.character)
locations_vector <- strsplit(locations_str, split = ", ")
result = ""
if(length(locations_vector$subcellular_location) != 0)
{
for (j in 1:length(locations_vector$subcellular_location))
{
if (locations_vector$subcellular_location[j] %in% secretory)
{
result = paste(result, "a", sep = "")
}
else if(locations_vector$subcellular_location[j] %in% non_secretory)
{
result = paste(result, "b", sep = "")
}
}
}
if (grepl("a", result, fixed = TRUE) & grepl("b", result, fixed = TRUE)){
locations_short[i,]["Secretory"] = "3"
}
else if (grepl("a", result, fixed = TRUE)){
locations_short[i,]["Secretory"] = "1"
}
else if (grepl("b", result, fixed = TRUE)){
locations_short[i,]["Secretory"] = "2"
}
else{
locations_short[i,]["Secretory"] = "3"
}
}
